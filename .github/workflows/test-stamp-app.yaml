name: test-stamp-app

on:
  push:
    branches: [ master ]

  # Enables this workflow to be manually run from the Actions tab
  workflow_dispatch:

jobs:
  push-build:
    runs-on: ubuntu-latest
  
    # Sets the permissions granted to the GITHUB_TOKEN for the actions in this job.
    # These are needed for the Docker image build and publish steps.
    # See: https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python requirements
        run: |
            cd stamp-app
            pip install -r requirements.txt

      - name: Run flake8
        run: |
            cd stamp-app
            flake8 --config flake8.conf

      - name: Run pytest tests for stamp-app web-app-api
        run: |
            cd stamp-app
            pytest -vs

      - name: Log in to the Github registry before building the Docker image
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for the Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}-app

      - name: Build and push Docker image to the Github registry
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./stamp-app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation of the Docker image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository }}-app
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
